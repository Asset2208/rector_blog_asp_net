@model rector_blog.Models.QuestionModels
@using Microsoft.AspNet.Identity

<head>
    <link href='@Url.Content("~/Content/themes/base/jquery-ui.css")' rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js" integrity="sha384-w1Q4orYjBQndcko6MimVbzY0tgp4pWB4lZ7lr30WKz0vr/aWKhXdBNmNb5D92v7s" crossorigin="anonymous"></script>
    <script src='@Url.Content("~/Scripts/jquery-3.4.1.min.js")' type="text/javascript"></script>
    <script src='@Url.Content("~/Scripts/jquery-ui-1.12.1.min.js")' type="text/javascript"></script>

    <script src='@Url.Content("~/Scripts/jquery.validate.min.js")'></script>
    <script src='@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")'></script>

    <script src= "https://www.google.com/recaptcha/api.js"></script>


    @Scripts.Render("~/bundles/modernizr")

    @*<script src="@Url.Content("~/Content/tinymce_latest_custom/tinymce/tinymce.min.js")"></script>
        <script>
            tinymce.init({
                selector: 'textarea', plugins: "media",
                toolbar: "media", media_live_embeds: true
            });</script>*@
</head>


@*@{
        ViewBag.Title = "Create";
    }

    <h2>Create</h2>*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @*<h4>QuestionModels</h4>*@
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="g-recaptcha" data-sitekey="6Ld1YBAaAAAAAFZPOV4F8LmgRFE5alSgKeRTgWIX"></div>
    @*<div class="form-group">
            @Html.LabelFor(model => model.User_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User_id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User_id, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <input type="hidden" name="User_id" value="@User.Identity.GetUserId()" />

    @*<div class="form-group">
            @Html.LabelFor(model => model.Is_answered, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Is_answered)
                    @Html.ValidationMessageFor(model => model.Is_answered, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@
    <input type="hidden" name="Is_answered" value="false" />

    @*<div class="form-group">
            @Html.LabelFor(model => model.Created_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Created_date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Created_date, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <input type="hidden" name="Created_date" value="@DateTime.Now" />

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button class="btn btn-success">Отправить</button>
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
