@*@model IEnumerable<rector_blog.Models.BlogPostsModels>*@
@model rector_blog.Models.BlogPageViewModel
@using Microsoft.AspNet.Identity
@using rector_blog.Helpers

@{
    ViewBag.Title = "Index";
}

@if (User.IsInRole("Admin"))
{
    <p>
        @Html.ActionLink("Добавить новость", "Create", new { }, new { @class = "viewDialog", data_dialog_title = "Создание модели" })
        @*@Html.ActionLink("Create New", "Create", new { }, new { @class = "viewDialog", data_dialog_title = "Создание модели" })*@
    </p>
}
<h2 class="text-center mt-5 mb-3">Новости</h2>

<style>
    .asdasd { /* Запрещаем перенос строк */
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif !important;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        /* Добавляем многоточие */
    }

    p {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
</style>






<div class="container">
    @using (Html.BeginForm("Search", "BlogPosts", FormMethod.Post))
    {
    <div class="form-inline">
        <div class="form-group w-75 mr-4">
            <input type="text" class="form-control w-100" id="Search" name="Search" placeholder="Искать..." data-autocomplete-source='@Url.Action("AutocompleteSearch", "BlogPosts")'>
        </div>
        <div class="form-group"><button class="btn btn-primary w-100" style="background-color: #0b7e3e; color: white; font-weight: bold;">Найти</button></div>
    </div>
        
    }
    <form class="form-inline" action="#" method="get">
    </form>

</div>

<div class="row mt-5">
    @foreach (var item in Model.BlogPostsModels)
    {
        <div class="col-lg-6 mb-4 all-news">
            <div class="card" style="min-height: 642px; max-height: 642px;">
                <img src="@Html.DisplayFor(modelItem => item.ImageUrl)" alt="" class="card-img-top" style="width: 538px; height: 358px;">
                <div class="card-body">
                    <h5 class="card-title">@Html.DisplayFor(modelItem => item.Title)</h5>
                    <ul class="list-inline mt-3">
                        <li class="list-inline-item"><h6 class="card-subtitle mb-2 text-muted">@Html.DisplayFor(modelItem => item.Created_date)</h6></li>
                        <li class="list-inline-item"><img src="https://cdn2.iconfinder.com/data/icons/picol-vector/32/view-512.png" class="mb-auto" style="max-width: 20px; max-height: 20px;" /></li>
                        <li class="list-inline-item"><h6 class="card-subtitle mb-2 text-muted">@Html.DisplayFor(modelItem => item.Views)</h6></li>
                    </ul>
                    @*<h6 class="card-subtitle mb-2 text-muted">@Html.DisplayFor(modelItem => item.Created_date)</h6>*@
                    <div class="asdasd">
                        <p>@Html.Raw(item.Content)</p>
                    </div>
                    @Html.ActionLink("Подробнее", "Details", new { id = item.Id }, new { @class = "btn btn-outline-success btn-sm" })

                </div>
            </div>
        </div>
    }
    
</div>
<div class="btn-group">
    @Html.PageLinks(Model.PageInfo, x => Url.Action("Index", new { page = x }))
</div>




<script>
    $(document).ready(function () {

        $.ajaxSetup({ cache: false });

        $(".viewDialog").on("click", function (e) {
            e.preventDefault();

            $("<div></div>")
                .addClass("dialog")
                .appendTo("body")
                .dialog({
                    title: $(this).attr("data-dialog-title"),
                    close: function () { $(this).remove() },
                    modal: true
                })
                .load(this.href);
        });
    });
</script>


<script type="text/javascript">
    $("#Search").keyup(function () {
        $("[data-autocomplete-source]").each(function () {
            var target = $(this);
            target.autocomplete({ source: target.attr("data-autocomplete-source") });
        });
    })
</script>

@*<script>
    $(document).ready(function () {
        function Is_contain(text_one, text_two) {
            if (text_one.indexOf(text_two) != -1)
                return true;
        }

        $("#Search").keyup(function () {
            var searchText = $("#Search").val().toLowerCase();
            $(".all-news").each(function () {
                if (!Is_contain($(this).text().toLowerCase(), searchText)) {
                    $(this).hide();
                }
                else {
                    $(this).show();
                }
            })
        })
    })
</script>*@

@*<table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.BlogCategoryModels.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Created_date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Content)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageUrl)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Views)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Enabled)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comments_enabled)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.BlogCategoryModels.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created_date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ImageUrl)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Views)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Enabled)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comments_enabled)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.Id })
            </td>
        </tr>
    }

    </table>*@
