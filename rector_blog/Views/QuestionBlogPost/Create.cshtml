@model rector_blog.Models.QuestionBlogPostModels

@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    @*<h4>QuestionBlogPostModels</h4>*@
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ID, "ID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <a href="" id="question_source" class="ml-2 viewDialog"><span id="main_id"></span></a>
    <script>
        $(document).ready(function () { // ran when the document is fully loaded
            // retrieve the jQuery wrapped dom object identified by the selector '#mySel'
            var sel = $('#ID');
            var lab = $('#main_id');

            // assign a change listener to it
            sel.change(function () { //inside the listener
                // retrieve the value of the object firing the event (referenced by this)
                var value = $(this).val();
                // print it in the logs
                console.log(value); // crashes in IE, if console not open
                // make the text of all label elements be the value
                //document.getElementById('main_id').tex = value;
                lab.text(value);

                var a = document.getElementById('question_source');
                var link = "/Question/Details/" + value;
                a.setAttribute("href", link);
            }); // close the change listener


        }); // close the ready listener
    </script>

    <script>
        $(document).ready(function () {

            $.ajaxSetup({ cache: false });

            $(".viewDialog").on("click", function (e) {
                e.preventDefault();

                $("<div></div>")
                    .addClass("dialog")
                    .appendTo("body")
                    .dialog({
                        title: $(this).attr("data-dialog-title"),
                        close: function () { $(this).remove() },
                        modal: true
                    })
                    .load(this.href);
            });
        });
    </script>

    @*<div class="form-group">
            @Html.LabelFor(model => model.Views, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Views, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Views, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <input type="hidden" name="Views" value="1" />

    @*<div class="form-group">
            @Html.LabelFor(model => model.Created_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Created_date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Created_date, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <input type="hidden" name="Created_date" value="@DateTime.Now" />

    <div class="form-group">
        @Html.LabelFor(model => model.Answer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Answer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="categories" class="control-label col-md-2">Categories</label>
        @*@Html.LabelFor(model => model.QuestionCategories, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-10" id="categories">
            @foreach (rector_blog.Models.QuestionCategoryModels questionCategory in ViewBag.Categories)
            {
                <input type="checkbox" name="selectedCourses" value="@questionCategory.ID" />@questionCategory.Name <br />
            }
        </div>

    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
